{
  "description": "Test cases for the new getDepositStatus endpoint",
  "endpoints": {
    "get_deposit_status": {
      "method": "GET",
      "url": "http://localhost:5000/api/bookings/{booking_id}/deposit-status",
      "headers": {
        "Authorization": "Bearer {your_jwt_token}",
        "Content-Type": "application/json"
      },
      "description": "Check and confirm deposit status for a booking",
      "example_booking_id": "Replace {booking_id} with actual booking ID",
      "required_role": "ADMIN or STAFF"
    }
  },
  "test_scenarios": {
    "scenario_1": {
      "description": "Valid booking with paid deposit",
      "expected_response": {
        "success": true,
        "message": "Deposit confirmed and booking status updated successfully",
        "data": {
          "booking": {
            "id": "booking_id",
            "status": "CONFIRMED",
            "depositStatus": "PAID",
            "depositAmount": 2000
          },
          "payment": {
            "id": "payment_id",
            "amount": 2000,
            "paymentDate": "2025-10-16T18:00:00.000Z",
            "transactionId": "transaction_id"
          }
        }
      }
    },
    "scenario_2": {
      "description": "Booking with no deposit payment",
      "expected_response": {
        "success": false,
        "message": "No paid deposit payment found for this booking",
        "code": "DEPOSIT_PAYMENT_NOT_FOUND"
      }
    },
    "scenario_3": {
      "description": "Booking not found",
      "expected_response": {
        "success": false,
        "message": "Booking not found"
      }
    },
    "scenario_4": {
      "description": "Deposit already confirmed",
      "expected_response": {
        "success": true,
        "message": "Deposit is already confirmed for this booking",
        "data": {
          "booking": {
            "id": "booking_id",
            "status": "CONFIRMED",
            "depositStatus": "PAID"
          }
        }
      }
    }
  },
  "workflow": {
    "step_1": "Create a booking using POST /api/bookings",
    "step_2": "Make a deposit payment using POST /api/payos/create-deposit",
    "step_3": "Complete payment via PayOS (webhook will automatically update payment status)",
    "step_4": "Call GET /api/bookings/{id}/deposit-status to confirm deposit and update booking status",
    "step_5": "Booking status should change from PENDING to CONFIRMED, depositStatus should be PAID"
  },
  "notes": [
    "The endpoint requires authentication (JWT token)",
    "Only ADMIN and STAFF roles can access this endpoint",
    "The function will only look for DEPOSIT type payments with PAID status",
    "If booking is already CONFIRMED with PAID deposit, it returns success without changes",
    "Audit log is created for deposit confirmation tracking"
  ]
}
